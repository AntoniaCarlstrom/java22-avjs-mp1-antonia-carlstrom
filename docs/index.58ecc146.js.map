{"mappings":"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","sources":["src/modules/firebaseModule.js","src/main.js"],"sourcesContent":["//Funktion för att hämta info från databasen och visa highscore på hemsidan\r\nasync function getFirebase() {\r\n  try {\r\n    const url = 'https://highscore-f90ba-default-rtdb.europe-west1.firebasedatabase.app/highscores.json';\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    console.log(\"data: \", data);\r\n    const highscoreDiv = document.getElementById('high-score');\r\n    highscoreDiv.innerHTML = \"\";\r\n\r\n    //Sortera array\r\n    const jsonArray = Object.values(data);\r\n    jsonArray.sort((a, b) => a.score - b.score);\r\n    jsonArray.reverse();\r\n    //Behåller bara de 5 första positionerna av arrayen\r\n    const finalArray = jsonArray.slice(0, 5);\r\n\r\n    //Visar highscorelistan\r\n    const highscoreList = document.querySelector('#high-score');\r\n\r\n    for (const key in finalArray) {\r\n\r\n      const user = finalArray[key];\r\n\r\n      const highScore = document.createElement('ul');\r\n      highScore.classList.add('highscore-list');\r\n\r\n      const userName = document.createElement('li');\r\n      userName.textContent = \"Name: \" + user.name;\r\n      highScore.appendChild(userName);\r\n\r\n      const score = document.createElement('li');\r\n      score.textContent = \"Score: \" + user.score;\r\n      highScore.appendChild(score);\r\n\r\n      highscoreList.appendChild(highScore);\r\n\r\n    }\r\n    return finalArray;\r\n  } catch (error) {\r\n    console.error('Error getting data from Firebase:', error);\r\n  };\r\n};\r\n\r\n\r\n// Funktion för att lägga in nya highscore-listan i Firebase.\r\nasync function patchToFirebase(finalArray) {\r\n  getFirebase()\r\n    .then(function (returnedValueFromGetFirebase) {\r\n      finalArray = returnedValueFromGetFirebase;\r\n    });\r\n  //Sorterar arrayen med nya objektet i\r\n  finalArraySorted = Object.values(finalArray);\r\n  finalArraySorted.sort((a, b) => a.score - b.score);\r\n\r\n  //Sorterar från högsta till lägsta scoren\r\n  finalArraySorted.reverse();\r\n\r\n  //Behåller bara de 5 högsta scoresen\r\n  finalArraySliced = finalArraySorted.slice(0, 5);\r\n\r\n  //Loop för att lägga in rätt highscore på rätt ställe i databasen.\r\n  for (let i = 0; i < finalArraySliced.length; i++) {\r\n    const url = `https://highscore-f90ba-default-rtdb.europe-west1.firebasedatabase.app/highscores/${i}.json`;\r\n\r\n\r\n    const newScore = {\r\n      name: finalArraySliced[i].name,\r\n      score: finalArraySliced[i].score\r\n    };\r\n\r\n    const options = {\r\n      method: 'PATCH',\r\n      body: JSON.stringify(newScore),\r\n      headers: {\r\n        \"Content-type\": \"application/json; charset=UTF-8\"\r\n      }\r\n    };\r\n\r\n    const response = await fetch(url, options);\r\n    const data = await response.json();\r\n  };\r\n};\r\n\r\nexport { getFirebase, patchToFirebase }\r\n","import { getFirebase, patchToFirebase } from \"./modules/firebaseModule.js\";\r\n\r\nconst playerText = document.querySelector(\".playerText\");\r\nconst playerName = document.querySelector(\".playerName\");\r\nconst computerText = document.querySelector(\".computerText\");\r\nconst resultText = document.querySelector(\".resultText\");\r\nconst resultText2 = document.querySelector(\".resultText2\");\r\nconst choiceBtns = document.querySelectorAll(\".choiceBtn\");\r\nconst nameButton = document.querySelector(\".nameBtn\");\r\nconst scorePlayerDiv = document.querySelector(\".scorePlayerDiv\");\r\nconst form = document.querySelector(\"form\");\r\nconst overlay = document.querySelector(\".overlay\");\r\n\r\nlet player;\r\nlet computer;\r\nlet scorePlayer = 0;\r\nlet scoreComputer = 0;\r\nlet playerNameFromInput = \"\";\r\nlet nameInput;\r\nlet finalArray = [];\r\n\r\n//Hämtar highscore-listan från Firebase\r\ngetFirebase()\r\n  .then(function (returnedValueFromGetFirebase) {\r\n    finalArray = returnedValueFromGetFirebase;\r\n  });\r\n//Sätter spelarens namn från input\r\nnameButton.addEventListener(\"click\", (event) => {\r\n  event.preventDefault();\r\n  nameInput = document.querySelector(\"form input\");\r\n  playerNameFromInput = nameInput.value;\r\n  playerName.textContent = playerNameFromInput + \":\";\r\n  form.style.visibility = \"hidden\";\r\n});\r\n\r\n//Lägger till eventlisteners till knapparna\r\nchoiceBtns.forEach((button) =>\r\n\r\n  button.addEventListener(\"click\", (event) => {\r\n    event.preventDefault();\r\n    player = button.textContent;\r\n    computerTurn();\r\n    playerText.textContent = `${player}`;\r\n    computerText.textContent = `${computer}`;\r\n    resultText.textContent = checkWinner();\r\n    //Kolla av textinnehållet på resultText för att se om spelaren vann.\r\n    if (resultText.textContent == \"You lose!\") {\r\n      scoreComputer++;\r\n      resultText2.textContent = `Game over! Computer wins!`;\r\n      overlay.classList.remove(\"hidden\");\r\n      //Om datorn får poäng - skapa objekt med spelarens namn + score i.\r\n      let newHighscore = {\r\n        name: playerNameFromInput,\r\n        score: scorePlayer\r\n      }\r\n\r\n      setTimeout(resetGame, 1000);\r\n\r\n      //Kollar om spelarens score är högre än lägsta scoren från databasen\r\n      if (scorePlayer > finalArray[4].score)\r\n        finalArray.push(newHighscore);\r\n\r\n      //Lägger till scoren i databasen\r\n      patchToFirebase(finalArray);\r\n\r\n      //Om spelaren får poäng ökas scoren på\r\n    } else if (resultText.textContent == \"You win!\") {\r\n      scorePlayer++;\r\n      resultText2.textContent = `Player wins! ${scorePlayer} points`;\r\n    }\r\n    scorePlayerDiv.textContent = `Score: ${scorePlayer}`;\r\n\r\n  })\r\n);\r\n\r\n\r\n//Datorns omgång bestäms av random nummer mellan 1-3\r\nfunction computerTurn() {\r\n  const randomNumber = Math.floor(Math.random() * 3) + 1;\r\n\r\n  switch (randomNumber) {\r\n    case 1:\r\n      computer = \"STEN\";\r\n      break;\r\n    case 2:\r\n      computer = \"SAX\";\r\n      break;\r\n    case 3:\r\n      computer = \"PÅSE\";\r\n      break;\r\n  }\r\n}\r\n\r\n//spelarens och datorns val checkas av mot varandra\r\nfunction checkWinner() {\r\n  if (player == computer) {\r\n    return \"Oavgjort!\";\r\n  } else if (computer == \"STEN\") {\r\n    return player == \"SAX\" ? \"You lose!\" : \"You win!\";\r\n  } else if (computer == \"SAX\") {\r\n    return player == \"PÅSE\" ? \"You lose!\" : \"You win!\";\r\n  } else if (computer == \"PÅSE\") {\r\n    return player == \"STEN\" ? \"You lose!\" : \"You win!\";\r\n  }\r\n}\r\n\r\n//Resetta spelet efter varje omgång = nollställer och hämtar från databasen\r\nfunction resetGame() {\r\n  scorePlayer = 0;\r\n  scoreComputer = 0;\r\n  resultText.textContent = \"\";\r\n  resultText2.textContent = \"\";\r\n  overlay.classList.add(\"hidden\");\r\n  form.classList.remove('hidden');\r\n  getFirebase();\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["async","$cc9ae9fc7a5419b7$export$7a667d08ed65fa47","url","response","fetch","data","json","console","log","document","getElementById","innerHTML","jsonArray","Object","values","sort","a","b","score","reverse","finalArray","slice","highscoreList","querySelector","key","user","highScore","createElement","classList","add","userName","textContent","name","appendChild","error","$cc9ae9fc7a5419b7$export$e96c0a32585e1110","then","returnedValueFromGetFirebase","finalArraySorted","finalArraySliced","i","length","newScore","options","method","body","JSON","stringify","headers","$2b6e161c9edcf319$var$playerText","$2b6e161c9edcf319$var$playerName","$2b6e161c9edcf319$var$computerText","$2b6e161c9edcf319$var$resultText","$2b6e161c9edcf319$var$resultText2","$2b6e161c9edcf319$var$choiceBtns","querySelectorAll","$2b6e161c9edcf319$var$nameButton","$2b6e161c9edcf319$var$scorePlayerDiv","$2b6e161c9edcf319$var$form","$2b6e161c9edcf319$var$overlay","$2b6e161c9edcf319$var$player","$2b6e161c9edcf319$var$computer","$2b6e161c9edcf319$var$nameInput","$2b6e161c9edcf319$var$scorePlayer","$2b6e161c9edcf319$var$scoreComputer","$2b6e161c9edcf319$var$playerNameFromInput","$2b6e161c9edcf319$var$finalArray","$2b6e161c9edcf319$var$resetGame","remove","addEventListener","event","preventDefault","value","style","visibility","forEach","button","Math","floor","random","$2b6e161c9edcf319$var$computerTurn","$2b6e161c9edcf319$var$checkWinner","newHighscore","setTimeout","push"],"version":3,"file":"index.58ecc146.js.map"}